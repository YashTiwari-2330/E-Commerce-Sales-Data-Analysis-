import pandas as pd
import numpy as np
from openpyxl.utils.units import inch_to_dxa

df = pd.read_csv("full_analytics_dataset.csv")
print(df.head())


#Check Missing Values
print(df.isnull().sum())

#DATA CLEANING

#A- HANDLE MISSING & INVALID VALUES

#-> Replace common string nulls with actual NaN
df.replace(['' , "null" , "None" , "NaN"] , np.zeros , inplace=True)
print(df)

# B - Convert Datatypes

#-> # Convert Quantity to numeric (coerce errors like 'two' to NaN)\
df["Quantity"] = pd.to_numeric(df["Quantity"] , errors='coerce')

#-> Convert Unit price to numeric
df["UnitPrice"] = pd.to_numeric(df["UnitPrice"] , errors='coerce')

# C. FIX DATA

# Convert OrderDate to datetime
df["OrderDate"] = pd.to_datetime(df["OrderDate"] , errors='coerce')
print(df)

# Check for invalid dates
print(df['OrderDate'].isnull().sum())

# D. Standardize Country Names
df["Country"] = df["Country"].str.strip().str.title()

# Fix known variations
df["Country"] = df["Country"].replace({
    'Usa' : "USA",
    'U.S.A' : "USA",
    "usa":"USA",
    "United States":"USA",
    "united states":"USA",
    "India" : "India",
    "Germany" : "Germany"
}
)

# ðŸ”„ 3. Data Transformation

#  A. Remove invalid rows

# Drop rows with missing critical data
df.dropna(subset=["Quantity" , "UnitPrice" , "OrderDate"] , inplace=True)
print(df)

# Remove outliers or negatives
df = df[(df['Quantity'] > 0) & (df['UnitPrice'] > 0)]
print(df)

#Create new columns TotalPrice
df["TotalPrice"] = df["Quantity"] * df["UnitPrice"]
print(df)

# ðŸ“Š 4. Exploratory Data Analysis (EDA)

# A. BASIC STATISTICS
print(df.describe())

# B. WHAT IS MOST POPULAR PRODUCT
top_product = df["Product"].value_counts().head(5)
print("Top most popular products :- \n" , top_product)

# C. REVENUE BY COUNTRY
revenue_by_country = df.groupby("Country")["TotalPrice"].sum().sort_values(ascending=False)
print("Revenue generated by country :-\n " , revenue_by_country)

# D. MONTHLY REVENUE
df["Month"] = df["OrderDate"].dt.to_period("M")
monthly_revenue = df.groupby('Month')['TotalPrice'].sum()
print("Monthly Revenue Generated :- \n" , monthly_revenue)

#EXPORTING
df.to_csv("Cleaned_analytics_dataset.csv" , index=False)
